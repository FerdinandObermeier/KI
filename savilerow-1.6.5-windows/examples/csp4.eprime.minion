MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 10
# CSE_active_eliminated_expressions = 20
# CSE_active_total_size = 30
**VARIABLES**
DISCRETE teams_00000 #
{1..4}
**CONSTRAINTS**
w-inintervalset(teams_00000, [1,1,3,4])
**VARIABLES**
DISCRETE teams_00001 #
{3..4}
DISCRETE teams_00002 #
{1..4}
**CONSTRAINTS**
w-inintervalset(teams_00002, [1,1,3,4])
**VARIABLES**
DISCRETE teams_00004 #
{1..3}
**CONSTRAINTS**
w-inintervalset(teams_00004, [1,1,3,3])
**VARIABLES**
DISCRETE teams_00006 #
{1..3}
**CONSTRAINTS**
w-inintervalset(teams_00006, [1,1,3,3])
**VARIABLES**
BOOL aux14 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00001=teams_00004)
BOOL aux15 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00001=teams_00002)
BOOL aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00000=teams_00006)
BOOL aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00001=teams_00006)
BOOL aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00002=teams_00004)
BOOL aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00002=teams_00006)
BOOL aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00004=teams_00006)
BOOL aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00000=teams_00004)
BOOL aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00000=teams_00002)
BOOL aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (teams_00000=teams_00001)
**SEARCH**
PRINT[[teams_00000],[teams_00001],[teams_00002],[teams_00004],[teams_00006]]
VARORDER STATIC [teams_00000, teams_00001, teams_00002, 3, teams_00004, 4, teams_00006, 4]
VARORDER AUX [teams_00000,teams_00001,teams_00002,teams_00004,teams_00006,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23]
**CONSTRAINTS**
reify(gaceq(teams_00001,teams_00004), aux14)
reify(gaceq(teams_00001,teams_00002), aux15)
reify(gaceq(teams_00000,teams_00006), aux16)
reify(gaceq(teams_00001,teams_00006), aux17)
reify(gaceq(teams_00002,teams_00004), aux18)
reify(gaceq(teams_00002,teams_00006), aux19)
reify(gaceq(teams_00004,teams_00006), aux20)
reify(gaceq(teams_00000,teams_00004), aux21)
reify(gaceq(teams_00000,teams_00002), aux22)
reify(gaceq(teams_00000,teams_00001), aux23)
watched-or({occurrenceleq([teams_00000, teams_00001, teams_00002, teams_00004, teams_00006], 2, 0),watched-and({occurrenceleq([teams_00000, teams_00001, teams_00002, teams_00004, teams_00006], 2, 4),occurrencegeq([teams_00000, teams_00001, teams_00002, teams_00004, teams_00006], 2, 2)})})
occurrenceleq([teams_00000, teams_00001, teams_00002, teams_00004, teams_00006], 4, 1)
watched-or({occurrenceleq([teams_00000, teams_00001, teams_00002, teams_00004, teams_00006], 1, 0),occurrencegeq([teams_00000, teams_00001, teams_00002, teams_00004, teams_00006], 1, 3)})
watched-or({w-literal(teams_00000,4),w-literal(teams_00001,4),w-literal(teams_00002,4)})
watched-or({w-literal(teams_00000,3),w-literal(teams_00000,4),w-literal(aux23,1),w-literal(aux22,1),w-literal(aux21,1),w-literal(aux16,1)})
watched-or({w-literal(teams_00001,3),w-literal(teams_00001,4),w-literal(aux23,1),w-literal(aux15,1),w-literal(aux14,1),w-literal(aux17,1)})
watched-or({w-literal(teams_00002,3),w-literal(teams_00002,4),w-literal(aux22,1),w-literal(aux15,1),w-literal(aux18,1),w-literal(aux19,1)})
watched-or({w-literal(teams_00000,3),w-literal(teams_00001,3),w-literal(teams_00002,3),w-literal(teams_00004,3),w-literal(teams_00006,3)})
watched-or({w-literal(teams_00004,3),w-literal(aux21,1),w-literal(aux14,1),w-literal(aux18,1),w-literal(aux20,1)})
watched-or({w-literal(teams_00006,3),w-literal(aux16,1),w-literal(aux17,1),w-literal(aux19,1),w-literal(aux20,1)})
occurrencegeq([teams_00000, teams_00001, teams_00002, teams_00004, teams_00006], 3, 1)
**EOF**
